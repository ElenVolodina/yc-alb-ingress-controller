---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress1
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/subnets: {{ SUBNET_A }},{{ SUBNET_B }},{{ SUBNET_C }}
    ingress.alb.yc.io/security-groups: {{ SG_1 }}
    ingress.alb.yc.io/external-ipv6-address: {{ ALB_IP }}
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    custom: anno1
spec:
  rules:
    - host: first-server.info
      http:
        paths:
          - path: /go
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress2
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/security-groups: {{ SG_2 }}
    ingress.alb.yc.io/request-timeout: 10s
    ingress.alb.yc.io/idle-timeout: 6m
spec:
  rules:
    - host: second-server.info
      http:
        paths:
          - path: /vamoose
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress3
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: non-default
    ingress.alb.yc.io/subnets: {{ SUBNET_A }},{{ SUBNET_B }}
    ingress.alb.yc.io/external-ipv6-address: auto
    ingress.alb.yc.io/request-timeout: 15s
spec:
  tls:
    - hosts:
        - third-server.info
      secretName: yc-certmgr-cert-id-fpqtvmqb9gkebdbvk16m
  rules:
    - host: third-server.info
      http:
        paths:
          - path: /test
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress4
  namespace: testapp-ns
  annotations:
    custom: anno1
    ingress.alb.yc.io/group-name: non-default
    ingress.alb.yc.io/subnets: {{ SUBNET_B }},{{ SUBNET_C }}
    ingress.alb.yc.io/request-timeout: 20s
spec:
  tls:
    - hosts:
        - fourth-server.info
      secretName: yc-certmgr-cert-id-fpqtvmqb9gkebdbvk16m
  rules:
    - host: fourth-server.info
      http:
        paths:
          - path: /test
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress5
  namespace: testapp-ns
  annotations:
    custom: anno1
    ingress.alb.yc.io/group-name: internal
    ingress.alb.yc.io/subnets: {{ SUBNET_B }},{{ SUBNET_C }}
    ingress.alb.yc.io/internal-ipv4-address: auto
    ingress.alb.yc.io/internal-alb-subnet: {{ SUBNET_C }}
spec:
  rules:
    - host: fifth-server.info
      http:
        paths:
          - path: /go-internal
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress6
  namespace: testapp-ns
  annotations:
    custom: anno1
    ya/alb_tag: static
    ya/subnets: {{ SUBNET_B }},{{ SUBNET_C }}
spec:
  rules:
    - host: sixth-server.info
      http:
        paths:
          - path: /static
            pathType: Prefix
            backend:
              resource:
                apiGroup: alb.yc.io
                kind: HttpBackendGroup
                name: bg-with-bucket-e2e
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress7
  namespace: testapp2-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
spec:
  rules:
    - host: first-server.info
      http:
        paths:
          - path: /go
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
          - path: /other-ns-go
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress8
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
spec:
  tls:
    - hosts:
        - "*.info"
      secretName: yc-certmgr-cert-id-fpqtvmqb9gkebdbvk16m
  rules:
    - host: "*.info"
      http:
        paths:
          - path: /secure-wildcard
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
    - host: first-server.info
      http:
        paths:
          - path: /insecure-nonwildcard
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress9
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    ingress.alb.yc.io/subnets: {{ SUBNET_A }}
    ingress.alb.yc.io/external-ipv6-address: {{ ALB_IP }}
    ingress.alb.yc.io/security-groups: {{ SG_1 }},{{ SG_2 }}
    ingress.alb.yc.io/protocol: grpc
spec:
  rules:
    - host: first-server.info
      http:
        paths:
          - path: /helloworld.Greeter/SayHello
            pathType: Prefix
            backend:
              service:
                name: grpc-testapp-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress10
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    ingress.alb.yc.io/subnets: {{ SUBNET_A }}
    ingress.alb.yc.io/external-ipv6-address: {{ ALB_IP }}
    ingress.alb.yc.io/security-groups: {{ SG_1 }},{{ SG_2 }}
    ingress.alb.yc.io/protocol: grpc
    ingress.alb.yc.io/transport-security: tls
spec:
  tls:
    - hosts:
        - "first-server.info"
      secretName: tls-cert-secret
  rules:
    - host: first-server.info
      http:
        paths:
          - path: /helloworld.Greeter/SayHello
            pathType: Prefix
            backend:
              service:
                name: grpc-testapp-service
                port:
                  number: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress11
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    ingress.alb.yc.io/protocol: http2
spec:
  rules:
    - host: second-server.info
      http:
        paths:
          - path: /proceed-h2c
            pathType: Prefix
            backend:
              service:
                name: h2c-testapp-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress-with-regex
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    ingress.alb.yc.io/use-regex: "true"
spec:
  rules:
    - host: first-server.info
      http:
        paths:
          - path: "/rege(x(es)?|xps?)"
            pathType: Exact
            backend:
              service:
                name: testapp-service
                port:
                  number: 8080
---
#check that controller doesn't crush on processing ingress with empty rule
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress-with-emtpy-rule
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/subnets: {{ SUBNET_A }},{{ SUBNET_B }},{{ SUBNET_C }}
    ingress.alb.yc.io/security-groups: {{ SG_1 }}
    ingress.alb.yc.io/external-ipv6-address: {{ ALB_IP }}
    ingress.alb.yc.io/request-timeout: 15s
    ingress.alb.yc.io/idle-timeout: 6m
    custom: anno1
spec:
  rules:
    - host: first-server.info
---
#direct response test
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: testapp-ns
  name: testapp-ingress-direct-response
  annotations:
    ingress.alb.yc.io/group-name: default
    ingress.alb.yc.io/direct-response.direct-response-test: "status=500,body=hello there"
spec:
  rules:
    - host: first-server.info
      http:
        paths:
          - pathType: Prefix
            path: "/direct-response-500"
            backend:
              resource:
                kind: DirectResponse
                name: direct-response-test
---
#different-path-types
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress-diff-path
  namespace: testapp-ns
  annotations:
    ingress.alb.yc.io/group-name: default
spec:
  rules:
    - host: seventh-server.info
      http:
        paths:
          - path: /go
            pathType: Exact
            backend:
              service:
                name: testapp-service2
                port:
                  name: http
          - path: /go
            pathType: Prefix
            backend:
              service:
                name: testapp-service
                port:
                  name: http