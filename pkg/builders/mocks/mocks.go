// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/alb-ingress/pkg/builders (interfaces: SubnetRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	vpc "github.com/yandex-cloud/go-genproto/yandex/cloud/vpc/v1"
	reflect "reflect"
)

// MockSubnetRepository is a mock of SubnetRepository interface
type MockSubnetRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSubnetRepositoryMockRecorder
}

// MockSubnetRepositoryMockRecorder is the mock recorder for MockSubnetRepository
type MockSubnetRepositoryMockRecorder struct {
	mock *MockSubnetRepository
}

// NewMockSubnetRepository creates a new mock instance
func NewMockSubnetRepository(ctrl *gomock.Controller) *MockSubnetRepository {
	mock := &MockSubnetRepository{ctrl: ctrl}
	mock.recorder = &MockSubnetRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSubnetRepository) EXPECT() *MockSubnetRepositoryMockRecorder {
	return m.recorder
}

// FindSubnetByID mocks base method
func (m *MockSubnetRepository) FindSubnetByID(arg0 context.Context, arg1 string) (*vpc.Subnet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindSubnetByID", arg0, arg1)
	ret0, _ := ret[0].(*vpc.Subnet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindSubnetByID indicates an expected call of FindSubnetByID
func (mr *MockSubnetRepositoryMockRecorder) FindSubnetByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindSubnetByID", reflect.TypeOf((*MockSubnetRepository)(nil).FindSubnetByID), arg0, arg1)
}
