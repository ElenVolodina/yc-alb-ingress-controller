// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yandex-cloud/alb-ingress/pkg/builders (interfaces: BackendGroupFinder)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	apploadbalancer "github.com/yandex-cloud/go-genproto/yandex/cloud/apploadbalancer/v1"
	reflect "reflect"
)

// MockBackendGroupFinder is a mock of BackendGroupFinder interface
type MockBackendGroupFinder struct {
	ctrl     *gomock.Controller
	recorder *MockBackendGroupFinderMockRecorder
}

// MockBackendGroupFinderMockRecorder is the mock recorder for MockBackendGroupFinder
type MockBackendGroupFinderMockRecorder struct {
	mock *MockBackendGroupFinder
}

// NewMockBackendGroupFinder creates a new mock instance
func NewMockBackendGroupFinder(ctrl *gomock.Controller) *MockBackendGroupFinder {
	mock := &MockBackendGroupFinder{ctrl: ctrl}
	mock.recorder = &MockBackendGroupFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBackendGroupFinder) EXPECT() *MockBackendGroupFinderMockRecorder {
	return m.recorder
}

// FindBackendGroup mocks base method
func (m *MockBackendGroupFinder) FindBackendGroup(arg0 context.Context, arg1 string) (*apploadbalancer.BackendGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindBackendGroup", arg0, arg1)
	ret0, _ := ret[0].(*apploadbalancer.BackendGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindBackendGroup indicates an expected call of FindBackendGroup
func (mr *MockBackendGroupFinderMockRecorder) FindBackendGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindBackendGroup", reflect.TypeOf((*MockBackendGroupFinder)(nil).FindBackendGroup), arg0, arg1)
}
